
server {
    listen       80;
    server_name  _;
    return       301 https://$host$request_uri;
}

ssl_certificate certs/bitterfree.cn.pem;
ssl_certificate_key certs/bitterfree.cn.key;

ssl_session_timeout 5m;
ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
ssl_prefer_server_ciphers on;
add_header Strict-Transport-Security "max-age=31536000";

# key: $binary_remote_addr，请求来源的二进制远程地址，二进制是为了压缩内存占用空间，节省空间，请求通过 key 去访问共享内存区的自己的那一部分空间
# zone: 共享内存区，name:size，这里的 name 是 ipRateLimit，size 是 10MB，可以存储 16w 个 ip 访问信息（访问信息包括请求的起始 ip 地址，数据报文等）
# rate: 最大访问速率，10r/s，代表每秒十个请求
# 这里是全局的配置，如果有指定 zone 为 ipRateLimit 的话，rate 就是 10r/s
limit_req_zone $binary_remote_addr zone=ipRateLimit:10m rate=30r/s;
# limit_req_zone $server_addr zone=serverRateLimit:10m rate=100r/s;

limit_conn_zone $binary_remote_addr zone=perip:10m; # 连接数限制
limit_conn_zone $server_name zone=perserver:10m; # 连接数限制-整个服务控制


server {
    listen 443 ssl;
    server_name bitterfree.cn;
    access_log /var/log/nginx/bitterfree.cn.https.log;

    return 302 https://github.com/CarefreeState/OKR-System4.0;
}


server {
    listen 443 ssl;
    server_name manage.bitterfree.cn;
    access_log /var/log/nginx/manage.bitterfree.cn.https.log;

    location / {
        root /usr/share/nginx/html/manage/;
        try_files $uri /user-management.html;
    }
}

server {
    listen 443 ssl;
    server_name testdoc.bitterfree.cn;
    access_log /var/log/nginx/testdoc.bitterfree.cn.https.log;

    location / {
        root /usr/share/nginx/html/testdoc/;
        try_files $uri /testdoc.html;
    }
}

server {
    listen 443 ssl;
    server_name api.bitterfree.cn;
    access_log /var/log/nginx/api.bitterfree.cn.https.log;
    
    location / {
        # 限流配置
        # limit_req zone=ipRateLimit burst=0; # 固定窗口算法
        limit_req zone=ipRateLimit burst=15; # 启动漏桶算法
        # limit_req zone=serverRateLimit burst=50; # 对接收到的所有请求限流
        # limit_req zone=ipRateLimit burst=5 nodelay; # 漏桶中的立即处理

        # 连接数限制
        limit_conn perip 20; # 限制一个 ip 最多可以有 20 个连接
        limit_conn perserver 100; # 这个服务最多有 100 个连接

        proxy_pass http://47.92.173.60:1701;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        client_max_body_size 3m; # 避免太大的请求影响相应速度
        client_body_buffer_size 1m;
        sendfile on;
    }
}
